import { Composer } from "telegraf";
import { message } from "telegraf/filters";
import { separateNumber, shopGenerator } from "../../utils/helpers.js";
import { Key, Keyboard } from "telegram-keyboard";
import { getUser } from "../../db/functions.js";
import { giveDonate } from "./donate-utils.js";
import text from "../../../ru_text.js";

const donateRouter = new Composer();

donateRouter.on(message("text"), async (ctx, next) => {
  try {
    const userMessage = ctx.message.text.toLowerCase();
    const [word1, word2, word3, word4] = userMessage.split(" ");

    if (userMessage == "–¥–æ–Ω–∞—Ç" || userMessage == "ü§ë –¥–æ–Ω–∞—Ç ü§ë") {
      await shopGenerator("4", ctx);
    }

    if (userMessage.startsWith("–¥–æ–Ω–∞—Ç –∫—É–ø–∏—Ç—å")) {
      const type = word3;
      const amount = Number(word4);
      const count = isNaN(amount) || amount < 1 ? 1 : amount;
      const user = ctx.state.user;

      if (user.donate < count) {
        await ctx.reply(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∏—Å–∫—Ä ü•≤`);
        return;
      }

      let callbackData = "";
      let confirmText = "";
      let exchangeText = "";

      if (type === "—Å—Ç–∞—Ä–∫–∏") {
        callbackData = `confirm_donate_${count}_${ctx.from.id}_stars`;
        confirmText = "‚ú® –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å";
        exchangeText = `–¢—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –æ–±–º–µ–Ω—è—Ç—å ${count} –∏—Å–∫—Ä –Ω–∞ ${separateNumber(
          count * 5000
        )} —Å—Ç–∞—Ä–æ–∫`;
      } else if (type === "–∫–∞–º–Ω–∏") {
        callbackData = `confirm_donate_${count}_${ctx.from.id}_stones`;
        confirmText = "ü™® –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å";
        exchangeText = `–¢—ã —Å–æ–±–∏—Ä–∞–µ—à—å—Å—è –æ–±–º–µ–Ω—è—Ç—å ${count} –∏—Å–∫—Ä –Ω–∞ ${separateNumber(
          count
        )} –∫–∞–º–Ω–µ–π`;
      } else {
        return;
      }

      const keyboard = Keyboard.inline([
        [Key.callback(confirmText, callbackData)],
      ]);

      await ctx.reply(exchangeText, keyboard);
    }

    if (word1 == "–∫—É–ø–∏—Ç—å" && word2 == "–∏—Å–∫—Ä—ã" && !isNaN(Number(word3))) {
      const count =
        isNaN(Number(word3)) || Number(word3) < 1 ? 1 : Number(word3);
      const pay = await ctx.telegram.createInvoiceLink({
        title: `${count} –∏—Å–∫—Ä`,
        description: `–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ ${count} –∏—Å–∫—Ä`,
        payload: "gold",
        currency: "XTR",
        prices: [{ label: "–ò—Å–∫—Ä—ã", amount: count }],
      });
      try {
        await ctx.telegram.sendMessage(
          ctx.from.id,
          `–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –Ω–∞ ${count} –∏—Å–∫—Ä –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.\n\nüí∏ –ò—Å–∫—Ä—ã –±—É–¥—É—Ç –Ω–∞—á–∏—Å–ª–µ–Ω—ã —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã.`,
          Keyboard.inline([Key.url("–ü–æ–ø–æ–ª–Ω–∏—Ç—å ‚ú®", pay)])
        );

        if (ctx.chat.type !== "private") {
          await ctx.replyWithHTML(
            '‚ú® –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ –∏—Å–∫—Ä –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ <a href="https://t.me/PablMefBot">–õ–° –±–æ—Ç–∞</a>',
            {
              reply_to_message_id: ctx.message.message_id,
              disable_web_page_preview: true,
            }
          );
        }
      } catch (error) {
        console.log(error);
        await ctx.reply(text.donate_err, {
          reply_to_message_id: ctx.message.message_id,
        });
      }
    }

    if (word1 == "–ø–µ—Ä–µ–¥–∞—Ç—å" && word2 == "–∏—Å–∫—Ä—ã") {
      await giveDonate(ctx);
    }

    return next();
  } catch (e) {
    await ctx.reply("–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞, " + e);
  }
});

donateRouter.on("pre_checkout_query", async (ctx) => {
  await ctx.answerPreCheckoutQuery(true);
});

donateRouter.on(message("successful_payment"), async (ctx) => {
  const { total_amount } = ctx.message.successful_payment;
  const userId = ctx.from.id;
  const user = await getUser(userId);
  user.donate += total_amount;
  await user.save();
  await ctx.reply(
    `–ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ! üéâ\n\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å —Ç–µ–ø–µ—Ä—å: ${user.donate} –∏—Å–∫—Ä ‚ú®.\n–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É –°—Ç–∞—Ä–ë–æ—Ç–∞ üíö`
  );
});

export default donateRouter;
