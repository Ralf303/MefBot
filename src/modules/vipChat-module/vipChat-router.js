const { Composer } = require("telegraf");
const { message } = require("telegraf/filters");

const vipChatRouter = new Composer();
const ru_text = require("../../../ru_text");
const { getChat } = require("../../db/functions");
const { Keyboard, Key } = require("telegram-keyboard");

vipChatRouter.on(message("text"), async (ctx, next) => {
  try {
    if (ctx.chat.type === "private") return next();
    const chat = await getChat(ctx.chat.id);
    const userMessage = ctx.message.text.toLowerCase();
    const userStatus = await ctx.telegram.getChatMember(
      ctx.chat.id,
      ctx.from.id
    );
    const isOwner = userStatus.status === "creator";

    if (userMessage == "–∫—É–ø–∏—Ç—å –≤–∏–ø—á–∞—Ç") {
      if (chat.vip) return await ctx.reply("–í–∏–ø—á–∞—Ç —É–∂–µ –∫—É–ø–ª–µ–Ωü§ë");
      await ctx.reply(
        "üíé –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≤–∏–ø—á–∞—Ç.\nüïì –ü–µ—Ä–∏–æ–¥: 1 –º–µ—Å—è—Ü\nüåø –¶–µ–Ω–∞: 1 –º–∏–ª–ª–∏–æ–Ω –º–µ—Ñ–∞",
        Keyboard.inline([
          [Key.callback("–¢–æ—á–Ω–æ –∫—É–ø–∏—Ç—å", "vipChat" + ctx.from.id)],
        ])
      );
    }

    if (userMessage == "+–∫–µ–π—Å—ã" && isOwner) {
      chat.allowCase = true;
      await ctx.reply("–ö–µ–π—Å—ã —Ç–µ–ø–µ—Ä—å —Ä–∞–∑—Ä–µ—à–µ–Ω—ã‚úÖ");
    } else if (!isOwner && userMessage == "+–∫–µ–π—Å—ã") {
      await ctx.reply(ru_text.not_owner);
    }

    if (userMessage == "-–∫–µ–π—Å—ã" && isOwner) {
      chat.allowCase = false;
      await ctx.reply("–ö–µ–π—Å—ã —Ç–µ–ø–µ—Ä—å –∑–∞–ø—Ä–µ—â–µ–Ω—ã‚ùå");
    } else if (!isOwner && userMessage == "-–∫–µ–π—Å—ã") {
      await ctx.reply(ru_text.not_owner);
    }

    if (userMessage == "+–∏–≥—Ä—ã" && isOwner) {
      chat.allowGames = true;
      await ctx.reply("–ò–≥—Ä—ã —Ç–µ–ø–µ—Ä—å —Ä–∞–∑—Ä–µ—à–µ–Ω—ã‚úÖ");
    } else if (!isOwner && userMessage == "+–∏–≥—Ä—ã") {
      await ctx.reply(ru_text.not_owner);
    }

    if (userMessage == "-–∏–≥—Ä—ã" && isOwner) {
      chat.allowGames = false;
      await ctx.reply("–ò–≥—Ä—ã —Ç–µ–ø–µ—Ä—å –∑–∞–ø—Ä–µ—â–µ–Ω—ã‚ùå");
    } else if (!isOwner && userMessage == "-–∏–≥—Ä—ã") {
      await ctx.reply(ru_text.not_owner);
    }

    await chat.save();
    return next();
  } catch (e) {
    await ctx.reply("–í–ò–ü –æ—à–∏–±–∫–∞, " + e);
  }
});

module.exports = vipChatRouter;
