const { Keyboard, Key } = require("telegram-keyboard");
const { Composer } = require("telegraf");
const CronJob = require("cron").CronJob;
const {
  getRandomInt,
  generateCapcha,
  notify,
  checkUserSub,
} = require("../utils/helpers");
const { dice, bandit, userFerma, createRP } = require("../utils/games.js");
const { getUser } = require("../db/functions.js");
const { giveCoins } = require("./giveScripts.js");

const chatCommands = new Composer();
const commands =
  "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n–º–µ—Ñ –≥–∞–π–¥\n–º–µ—Ñ\n–±–æ—Ç\n–∫–∞–ø—á–∞\n–º–∞–≥–∞–∑–∏–Ω\n–ø—Ä–æ—Ñ\n–∫–æ–º–∞–Ω–¥—ã";
const work =
  "–ö–æ–º–∞–Ω–¥—ã –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º –º–æ–∂–Ω–æ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –º–µ—Ñ–∞:\n\n–§–µ—Ä–º–∞\n–ö—É–±\n–ë–∞–Ω–¥–∏—Ç\n\n–¢–∞–∫ –∂–µ –≤ —á–∞—Ç–µ –∏–Ω–æ–≥–¥–∞ –ø–æ—è–≤–ª—è–µ—Ç—Å—è –∫–∞–ø—á–∞ –∏–∑ 6 —Ü–∏—Ñ—Ä –∏ –µ—Å–ª–∏ –≤—ã –≤–≤–µ–¥–µ—Ç–µ –µ–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ —Ç–æ –ø–æ–ª—É—á–∏—Ç–µ –º–µ—Ñ–∞";
let capture = 120394857653;

const triggers = [
  "–º–µ—Ñ",
  "–±–æ—Ç",
  "–º–∞–≥–∞–∑–∏–Ω",
  "–ø—Ä–æ—Ñ",
  "–∫–æ–º–∞–Ω–¥—ã",
  "–º–æ–π –º–µ—Ñ",
  "–±",
  "–∫—É–±",
  "–±–∞–Ω–¥–∏—Ç",
  "–º–µ—Ñ –≥–∞–π–¥",
  "—Ñ–µ—Ä–º–∞",
  "—Ñ–∞—Ä–º–∞",
  "–∞–∫—Ç–∏–≤",
  "–æ—Ç—Å—ã–ø–∞—Ç—å",
];

const rp = [
  "–∫–∏–Ω—É—Ç—å",
  "–¥–æ–∑–∞",
  "—Å–µ–∫—Å",
  "—É–Ω–∏—á—Ç–æ–∂–∏—Ç—å",
  "–Ω—é—Ö–∞—Ç—å",
  "–Ω–∞–∫–æ—Ä–º–∏—Ç—å",
  "–æ—Ç—à–ª–µ–ø–∞—Ç—å",
  "–±—É–º",
];

const rpEmoji = ["ü´Ç", "üíâ", "üîû", "üíÄ", "üåø", "üë®‚Äçüç≥", "üîû", "üí•"];

const rpValue = [
  "–∫–∏–Ω—É–ª –Ω–∞–ø—Ä–æ–≥–∏–±",
  "–≤–∫–æ–ª–æ–ª –¥–æ–∑—É",
  "–ø–æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –∫–æ–ª–µ–Ω–∏",
  "—É–Ω–∏—á—Ç–æ–∂–∏–ª",
  "–∑–∞–Ω—é—Ö–Ω—É–ª –º–µ—Ñ–∞ –≤–º–µ—Å—Ç–µ —Å",
  "–≤–∫—É—Å–Ω–æ –Ω–∞–∫–æ—Ä–º–∏–ª",
  "—Å–º–∞—á–Ω–æ –æ—Ç—à–ª–µ–ø–∞–ª",
  "–≤–∑–æ—Ä–≤–∞–ª",
];

chatCommands.on("text", async (ctx, next) => {
  const user = await getUser(
    ctx.from.id,
    ctx.from.first_name,
    ctx.from.username
  );
  const userMessage = ctx.message.text.toLowerCase();
  const [word1, word2, word3] = userMessage.split(" ");
  const replyToMessage = ctx.message.reply_to_message;
  const IsPrivate = ctx.chat.type === "private";
  const checkStatus = await checkUserSub(
    ctx,
    "@healthy_food_music",
    word1,
    userMessage,
    triggers,
    ctx
  );
  if (replyToMessage && replyToMessage.from) {
    const rpid = rp.indexOf(userMessage);
    const needrp = rpValue[rpid];
    const needemoji = rpEmoji[rpid];
    if (userMessage == rp[rpid]) {
      createRP(needrp, needemoji, ctx, replyToMessage);
    }
  }
  try {
    if (checkStatus || userMessage === capture) {
      if (userMessage == "–ø—Ä–æ—Ñ") {
        ctx.reply(
          "–í–∞—à –Ω–∏–∫: " +
            user.firstname +
            "\n–í–∞—à ID: " +
            ctx.chat.id +
            "\n–í–∞—à –º–µ—Ñ: " +
            user.balance +
            "\n–ö–∞–ø—á–µ–π –≤–≤–µ–¥–µ–Ω–æ: " +
            user.captureCounter +
            "\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å —Å–±–æ—Ä–∞: " +
            user.meflvl +
            "\n–í–∞—à —É—Ä–æ–≤–µ–Ω—å –≤—Ä–µ–º–µ–Ω–∏: " +
            user.timelvl
        );
      }

      if (
        userMessage == "–º–æ–π –º–µ—Ñ" ||
        userMessage == "–º–µ—Ñ" ||
        userMessage == "–±"
      ) {
        ctx.reply("–í–∞—à –º–µ—Ñ: " + user.balance);
      }

      if (userMessage == "–º–µ—Ñ –≥–∞–π–¥") {
        ctx.reply(work);
      }

      if (word1 == "–æ—Ç—Å—ã–ø–∞—Ç—å") {
        await giveCoins(ctx);
      }

      if (userMessage == "–±–æ—Ç") {
        ctx.reply("‚úÖ–ù–∞ –º–µ—Å—Ç–µ");
      }

      if (userMessage == "–∫–æ–º–∞–Ω–¥—ã") {
        ctx.reply(commands);
      }

      if (userMessage == "–º–∞–≥–∞–∑–∏–Ω") {
        if (IsPrivate) {
          ctx.reply(
            "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:",
            Keyboard.inline([
              [
                Key.callback("–¢–æ–≤–∞—Ä—ã –¥–ª—è —á–∞—Ç–∞", "chatAssortiment"),
                Key.callback("–£–ª—É—á—à–µ–Ω–∏—è", "farmApp"),
              ],
              [Key.callback("–ó–∞–∫—Ä—ã—Ç—å", "dell")],
            ])
          );
        } else {
          ctx.reply("–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª—Å");
        }
      }
      if (userMessage === capture) {
        const randommef = getRandomInt(50, 200);
        user.balance += randommef;
        user.captureCounter += 1;
        await ctx.reply("–í–µ—Ä–Ω–æ, —Ç—ã –ø–æ–ª—É—á–∏–ª " + randommef + " –º–µ—Ñ–∞", {
          reply_to_message_id: ctx.message.message_id,
        });
        capture = 342234242;
      }

      if (word1 == "–∫—É–±") {
        await dice(word3, word2, user, ctx, ctx);
      }

      if (userMessage == "—Ñ–µ—Ä–º–∞" || userMessage == "—Ñ–∞—Ä–º–∞") {
        await userFerma(ctx, user);
      }

      if (word1 == "–±–∞–Ω–¥–∏—Ç") {
        await bandit(word2, user, ctx);
      }
      await user.save();
    } else if (triggers.includes(userMessage) || triggers.includes(word1)) {
      await notify(ctx, "healthy_food_music");
    }
  } catch (e) {
    ctx.reply("–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞, " + e);
  }
  return next();
});

function CaptureGenerator(bot) {
  new CronJob(
    "0 1 */2 * * *",
    async function () {
      capture = generateCapcha();
      await bot.telegram.sendMessage(-1001680708708, "–ú–µ—Ñ–ö–∞–ø—á–∞ " + capture);
    },
    null,
    true,
    "Europe/Moscow"
  );
}

module.exports = { chatCommands, CaptureGenerator };
