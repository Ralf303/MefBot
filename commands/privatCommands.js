const { Keyboard, Key } = require("telegram-keyboard");
const { Composer } = require("telegraf");
const clothes = require("../itemsObjects/clothes");
const { tryItem } = require("../itemsModule/clothesFunctions");

const privatCommands = new Composer();

privatTriggers = ["–º–∞–≥–∞–∑–∏–Ω", "–ø—Ä–∏–º–µ—Ä–∏—Ç—å", "—Ä—É–ª–µ—Ç–∫–∞"];

privatCommands.on("text", async (ctx, next) => {
  const userMessage = ctx.message.text.toLowerCase();
  const [word1, word2, word3] = userMessage.split(" ");
  const IsPrivate = ctx.chat.type === "private";

  try {
    if (IsPrivate) {
      if (userMessage == "–º–∞–≥–∞–∑–∏–Ω") {
        await ctx.reply(
          "–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å:",
          Keyboard.inline([
            [
              Key.callback("–¢–æ–≤–∞—Ä—ã —á–∞—Ç–∞", "chatAssortiment"),
              "–£–ª—É—á—à–µ–Ω–∏—è",
              "–í–µ—â–∏",
            ],
            [
              Key.callback("–ó–∞–∫—Ä—ã—Ç—å", "dell"),
              Key.callback("ü§ëDonateLandü§ë", "4"),
            ],
          ])
        );
      }

      if (userMessage == "—Ä—É–ª–µ—Ç–∫–∞") {
        ctx.scene.enter("rouletteScene");
      }

      if (word1 == "–ø—Ä–∏–º–µ—Ä–∏—Ç—å") {
        const id = Number(word2);
        const itemInfo = clothes[id];
        if (!isNaN(id)) {
          await tryItem(itemInfo, ctx, id);
        } else {
          await ctx.reply(
            "–ù–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ\n<<–ü—Ä–∏–º–µ—Ä–∏—Ç—å {Id –≤–µ—â–∏}>>"
          );
        }
      }
    } else if (
      (privatTriggers.includes(userMessage) ||
        privatTriggers.includes(word1)) &&
      !IsPrivate
    ) {
      await ctx.reply("–î–∞–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –≤ –ª—Å");
    }
  } catch (e) {
    await ctx.reply("–ö–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞, " + e);
  }
  return next();
});

module.exports = privatCommands;
