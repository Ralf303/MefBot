const { Item, User } = require("../db/models");
const cases = require("../itemsObjects.js/cases");
const clothes = require("../itemsObjects.js/clothes");
const { resiveLog, loseLog } = require("../logs/globalLogs");
const { getRandomInt } = require("../utils/helpers");
const sequelize = require("sequelize");

const openminecraftCase = async (user, ctx, bot) => {
  try {
    const chance = getRandomInt(1, 1000);
    let result = `${user.username} –æ—Ç–∫—Ä—ã–ª –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏–ª`;
    if (chance <= 499) {
      const win = getRandomInt(1, 250);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 500 && chance <= 502) {
      const needItem = clothes[12];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 503 && chance <= 505) {
      const needItem = clothes[24];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 506 && chance <= 508) {
      const needItem = clothes[21];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 509 && chance <= 511) {
      const needItem = clothes[22];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ú–∞–π–Ω–∫—Ä–∞—Ñ—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 512 && chance <= 599) {
      const win = getRandomInt(250, 1000);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, `–º–µ—Ñ`, `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 600) {
      result += " –Ω–∏—á–µ–≥–æüò•";
    }
    await user.save();
    await ctx.reply(result);
  } catch (e) {
    console.log(e);
  }
};

const openbrawlCase = async (user, ctx, bot) => {
  try {
    const chance = getRandomInt(1, 1000);
    let result = `${user.username} –æ—Ç–∫—Ä—ã–ª –ë—Ä–∞–≤–ª –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏–ª`;
    if (chance <= 499) {
      const win = getRandomInt(1, 250);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 500 && chance <= 505) {
      const randomItem = getRandomInt(40, 47);
      const needItem = clothes[randomItem];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –ë—Ä–∞–≤–ª –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 506 && chance <= 599) {
      const win = getRandomInt(250, 1000);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 600) {
      result += " –Ω–∏—á–µ–≥–æüò•";
    }

    await user.save();
    await ctx.reply(result);
  } catch (e) {
    console.log(e);
  }
};

const openfalloutCase = async (user, ctx, bot) => {
  try {
    const chance = getRandomInt(1, 1000);
    let result = `${user.username} –æ—Ç–∫—Ä—ã–ª –§–æ–ª–ª–∞—É—Ç –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏–ª`;
    if (chance <= 499) {
      const win = getRandomInt(1, 50);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 500 && chance <= 515) {
      const randomItem = getRandomInt(60, 63);
      const needItem = clothes[randomItem];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –§–æ–ª–ª–∞—É—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 516 && chance <= 599) {
      const win = getRandomInt(250, 500);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 600) {
      result += " –Ω–∏—á–µ–≥–æüò•";
    }

    await user.save();
    await ctx.reply(result);
  } catch (e) {
    console.log(e);
  }
};

const openhotlineCase = async (user, ctx, bot) => {
  try {
    const chance = getRandomInt(1, 1000);
    let result = `${user.username} –æ—Ç–∫—Ä—ã–ª –°–∏–≥–º–∞ –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏–ª`;
    if (chance <= 499) {
      const win = getRandomInt(1, 250);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 500 && chance <= 515) {
      const randomItem = getRandomInt(50, 55);
      const needItem = clothes[randomItem];
      const item = await Item.create({
        src: needItem.src,
        itemName: needItem.name,
        bodyPart: needItem.bodyPart,
        isWorn: false,
      });

      user.fullSlots++;
      await user.addItem(item);
      await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
      await bot.telegram.sendMessage(
        process.env.CHAT_ID,
        `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –°–∏–≥–º–∞ –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
      );
      await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
      await user.save();
      await item.save();
      return;
    }

    if (chance >= 516 && chance <= 599) {
      const win = getRandomInt(250, 1000);
      user.balance += win;
      result += ` ${win}MF`;
      await resiveLog(user, "–º–µ—Ñ", `${win}`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
    }

    if (chance >= 600) {
      result += " –Ω–∏—á–µ–≥–æüò•";
    }

    await user.save();
    await ctx.reply(result);
  } catch (e) {
    console.log(e);
  }
};

const openDonateCase = async (user, ctx) => {
  if (user.donateCase === 0) {
    await ctx.reply(`–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ñ–∫–µ–π—Å–æ–≤üò•`);
    return;
  }

  user.donateCase--;
  await user.save();

  let result = `${user.username} –æ—Ç–∫—Ä—ã–ª –î–æ–Ω–∞—Ç –∫–µ–π—Å –∏ –ø–æ–ª—É—á–∏–ª`;
  const randomItem =
    Math.floor(Math.random() * Object.keys(clothes).length) + 1;
  const needItem = clothes[randomItem];
  const item = await Item.create({
    src: needItem.src,
    itemName: needItem.name,
    bodyPart: needItem.bodyPart,
    isWorn: false,
  });

  user.fullSlots++;
  await user.addItem(item);
  await ctx.reply(`‚ùóÔ∏è@${result} ${needItem.name}‚ùóÔ∏è`);
  await ctx.telegram.sendMessage(
    process.env.CHAT_ID,
    `‚ùóÔ∏è@${user.username} –∏—Å–ø—ã—Ç–∞–ª —É–¥–∞—á—É –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –î–æ–Ω–∞—Ç –∫–µ–π—Å–∞ –∏ –≤—ã–±–∏–ª ${needItem.name}‚ùóÔ∏è`
  );
  await resiveLog(user, `${needItem.name}`, `1`, "–ø—Ä–∏–∑ –∏–∑ –∫–µ–π—Å–∞");
  await user.save();
  await item.save();
};

/*****************************************************************************************************/

const buyCase = async (user, id, count, ctx) => {
  const needCase = cases[id];

  if (needCase) {
    let price = needCase.price;
    if (!isNaN(count)) {
      price *= count;
    } else {
      count = 1;
    }

    if (user.balance < price) {
      await ctx.reply(`–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ñ–∞üò•`);
      return;
    }

    await ctx.reply(
      `–£—Å–ø–µ—à–Ω–æ –∫—É–ø–ª–µ–Ω ${needCase.name} –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ ${count} –∑–∞ ${price}`
    );
    user.balance -= price;
    await loseLog(
      user,
      "–º–µ—Ñ",
      `–ø–æ–∫—É–ø–∫–∞ ${needCase.name} –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ ${count}`
    );

    await resiveLog(user, `${needCase.name}`, `${count}`, "–ø–æ–∫—É–ø–∫–∞ –≤ –º–∞–≥–∞–∑–∏–Ω–µ");
    user[needCase.dbName] += count;
    await user.save();
  } else {
    await ctx.reply(`–¢–∞–∫–æ–≥–æ –º–µ—Ñ–∫–µ–π—Å–∞ –Ω–µ—Çüò•`);
  }
};

const open = {
  minecraftCase: openminecraftCase,
  brawlCase: openbrawlCase,
  hotlineCase: openhotlineCase,
  falloutCase: openfalloutCase,
};

const openCase = async (user, id, ctx, bot) => {
  try {
    const needCase = cases[id];

    if (!needCase) {
      await ctx.reply("–¢–∞–∫–æ–≥–æ –º–µ—Ñ–∫–µ–π—Å–∞ –Ω–µ—Çüò•");
      return;
    }

    const caseName = needCase.dbName;

    if (user[caseName] > 0) {
      await User.update(
        { [caseName]: user[caseName] - 1 },
        { where: { id: user.id } }
      );
      await open[caseName](user, ctx, bot);
      await loseLog(user, user[caseName], "–æ—Ç–∫—Ä—ã—Ç–∏–µ");
      await user.save();
    } else {
      await ctx.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–µ—Ñ–∫–µ–π—Å–æ–≤üò•");
    }
  } catch (e) {
    console.log(e);
  }
};

const getCaseInfo = async (id, ctx) => {
  const needCase = cases[id];

  if (!needCase) {
    await ctx.reply("–¢–∞–∫–æ–≥–æ –∫–µ–π—Å–∞ –≤–æ–æ–±—â–µ –Ω–µ—Çüò•");
    return;
  }

  const info = needCase.items;

  await ctx.reply(`‚ùóÔ∏è${needCase.name}‚ùóÔ∏è\n\n${info}`);
};

module.exports = { openCase, buyCase, openDonateCase, getCaseInfo };
