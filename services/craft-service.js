const { Item } = require("../db/models");
const clothes = require("../itemsObjects/clothes");
const craftItems = require("../itemsObjects/crafts");
const { loseLog, resiveLog } = require("../logs/globalLogs");

class CrafService {
  async craftItem(user, id, ctx) {
    try {
      const craft = craftItems[id];

      if (!craft) {
        await ctx.reply("–¢–∞–∫–æ–≥–æ –∫—Ä–∞—Ñ—Ç–∞ –Ω–µ—Çüò•");
        return;
      }

      const components = craft.components;
      const quantity = craft.quantity;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const userItems = await user.getItems();
      const availableComponents = userItems.filter((item) =>
        components.includes(item.itemName)
      );

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞
      if (availableComponents.length < quantity) {
        await ctx.reply("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ –¥–ª—è –∫—Ä–∞—Ñ—Ç–∞");
        return;
      }

      // –£–¥–∞–ª–µ–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await Promise.all(
        availableComponents
          .slice(0, quantity)
          .map((component) => component.destroy())
      );
      user.fullSlots -= quantity;
      await loseLog(user, `${availableComponents.slice(0, quantity)}`, `–∫—Ä–∞—Ñ—Ç`);

      let chance = Math.random() * 100;

      // –ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å—Ç—å –∏ –Ω–∞–¥–µ—Ç –ª–∏ "–î—Ä–æ–Ω '–≠–î-–≠'"
      const droneItem = await Item.findOne({
        where: {
          userId: user.id,
          itemName: '–î—Ä–æ–Ω "–≠–î-–≠"',
          isWorn: true,
        },
      });

      if (droneItem) {
        chance -= 25;
      }

      const pupsItem = await Item.findOne({
        where: {
          userId: user.id,
          itemName: "–ü—É–ø—Å ¬´–£–¥–∞—á–∞¬ª",
          isWorn: true,
        },
      });

      if (pupsItem) {
        chance -= 5;
      }

      if (chance <= craft.chance) {
        // –°–æ–∑–¥–∞–Ω–∏–µ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
        const newItem = await Item.create({
          src: clothes[craft.personalId].src,
          itemName: clothes[craft.personalId].name,
          bodyPart: clothes[craft.personalId].bodyPart,
          price: clothes[craft.personalId].price,
        });

        user.fullSlots++;
        await user.addItem(newItem);

        await resiveLog(
          user,
          `${newItem.itemName}[${newItem.id}]`,
          "1",
          "–£—Å–ø–µ—à–Ω—ã–π –∫—Ä–∞—Ñ—Ç"
        );
        await user.save();
        await newItem.save();

        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∫—Ä–∞—Ñ—Ç–∞
        await ctx.reply(
          `–£—Å–ø–µ—à–Ω–æ —Å–∫—Ä–∞—Ñ—Ç–µ–Ω–æ! –ü–æ–ª—É—á–µ–Ω–æ: ${newItem.itemName}[${newItem.id}]`
        );
      } else {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –Ω–µ—É–¥–∞—á–Ω–æ–≥–æ –∫—Ä–∞—Ñ—Ç–∞
        await ctx.reply("–ö—Ä–∞—Ñ—Ç –Ω–µ —É–¥–∞–ª—Å—è. –ö–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –ø–æ—Ç–µ—Ä—è–Ω—ã.");
      }
    } catch (error) {
      console.error(error);

      // –û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –æ–± –æ—à–∏–±–∫–µ –∫—Ä–∞—Ñ—Ç–∞
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∫—Ä–∞—Ñ—Ç–µ.");
    }
  }

  async craftList(ctx) {
    let message = "‚ùóÔ∏è–ö–†–ê–§–¢–ò–ù–ì‚ùóÔ∏è\n\n";

    for (const id in craftItems) {
      const item = craftItems[id];

      message += `${id}) ${item.name}[${item.personalId}]\n`;
      message += "‚Ä¢–í–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã:\n";

      for (const component of item.components) {
        message += `‚Ä¢ ${component}\n`;
      }

      message += `‚Ä¢–ù—É–∂–Ω–æ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤: ${item.quantity}\n`;
      message += `‚Ä¢–®–∞–Ω—Å: ${item.chance}%\n\n`;
    }

    message += "–î–ª—è –∫—Ä–∞—Ñ—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ\n<<–ö—Ä–∞—Ñ—Ç {id}>>\n\n";
    message +=
      "–î–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –≤–µ—â–∏ –≤–≤–µ–¥–∏—Ç–µ\n<<–ò–Ω—Ñ–∞ {id —Å–∞–º–æ–π –≤–µ—â–∏}>>";

    await ctx.reply(message);
  }
}

module.exports = new CrafService();
